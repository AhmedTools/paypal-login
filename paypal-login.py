from requests import get,post
from requests.utils import quote
from re import findall

account = ""  # account here [email:password]
class paypal:
	def __init__(self,account):
		self.username, self.password = map(quote, account.split(':'))
		self.url = "https://www.paypal.com/signin?intent=checkout&ctxId=ullndg5617253d9ee24859b87230a519f426d6&returnUri=%252Fwebapps%252Fhermes&state=%253Fflow%253D1-P%2526ulReturn%253Dtrue%2526token%253D68909346WP205534E%2526useraction%253Dcommit%2526rm%253D2%2526mfid%253D1493251164212_e335be39b9d1c%2526xclick_params%253DYnVzaW5lc3MlM0RhdGtpbnM3NiUyNTQwbmF2ZXIuY29tJTI2aXRlbV9uYW1lJTNEQ2xpcCUyNTIwRG93bmxvYWQlMjUyMC0lMjUyMCUyNTI4JTI1RUQlMjU5NSUyNTlDJTI1RUElMjVCOCUyNTgwJTI1MjlBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTIwb2ZmaWNlJTI1MjBzdG9yeSUyNTIwcGFydC4zJTI1MjBQdW5pc2htZW50JTI1MjBjYXRmaWdodCUyNTIwJTI1MjhBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTI5JTI2YW1vdW50JTNEOC4wMCUyNnJldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnBheXBhbCUyNTJGc3VjY2Vzcy5waHAlMjUzRm9pZCUyNTNEMjAxNzA0MjcwODU5MjE3MDE4JTI2Y2FuY2VsX3JldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnVwZGF0ZXMucGhwJTI2Y2hhcnNldCUzRHV0Zi04JTI2Y2J0JTNETXVzdCUyNTIwY2xpY2slMjUyMHRoaXMlMjUyMGZvciUyNTIwRG93bmxvYWQlMjUyMGNsaXAlMjUyMSUyNTIxJTI2bm9fc2hpcHBpbmclM0QxJTI2cm0lM0QyJTI2bm9fbm90ZSUzRDElMjZ3YV90eXBlJTNEQnV5Tm93JTI2Y291bnRlcnBhcnR5JTNEMTYxNjU1NDAzNzA0MDI2MjY5MA%25253D%25253D&flowId=68909346WP205534E&country.x=KR&locale.x=en_US"
			
	def vpn(self):
		if get(self.url).status_code == int(403):
			exit('- Turn on VPN')
			
	def getCookies(self):
		response = get(self.url).text
		return quote(findall(r'data-csrf-token="(.*?)"',response)[0]) , findall(r'name="_sessionID" value="(.*?)"',response)[0]
	
	def login(self):
		csrf , sessionid = self.getCookies()
		return post(self.url,data=f"_csrf={csrf}&_sessionID={sessionid}&locale.x=en_US&processSignin=main&fn_sync_data=%257B%2522SC_VERSION%2522%253A%25222.0.1%2522%252C%2522syncStatus%2522%253A%2522data%2522%252C%2522f%2522%253A%252268909346WP205534E%2522%252C%2522s%2522%253A%2522UL_CHECKOUT_INPUT_PASSWORD%2522%252C%2522chk%2522%253A%257B%2522ts%2522%253A1695057893170%252C%2522eteid%2522%253A%255B-1294079789%252C13188799918%252C-10949659039%252C8199468597%252C-1023571641%252C-3729849861%252Cnull%252Cnull%255D%252C%2522tts%2522%253A5680%257D%252C%2522dc%2522%253A%2522%257B%255C%2522screen%255C%2522%253A%257B%255C%2522colorDepth%255C%2522%253A24%252C%255C%2522pixelDepth%255C%2522%253A24%252C%255C%2522height%255C%2522%253A768%252C%255C%2522width%255C%2522%253A1612%252C%255C%2522availHeight%255C%2522%253A728%252C%255C%2522availWidth%255C%2522%253A1612%257D%252C%255C%2522ua%255C%2522%253A%255C%2522Mozilla%252F5.0%2520%28Windows%2520NT%252010.0%253B%2520Win64%253B%2520x64%29%2520AppleWebKit%252F537.36%2520%28KHTML%252C%2520like%2520Gecko%29%2520Chrome%252F116.0.0.0%2520Safari%252F537.36%255C%2522%257D%2522%252C%2522d%2522%253A%257B%2522ts1%2522%253A%2522Dk000%253A2729Uk000%253A2Uh%253A1033Uh%253A1479%2522%252C%2522rDT%2522%253A%252246987%252C46448%252C46907%253A16175%252C15454%252C17810%253A41909%252C41434%252C42078%253A52036%252C51537%252C55002%253A52630%252C51459%252C52302%253A11624%252C10777%252C11674%253A21908%252C20803%252C21902%253A42344%252C41524%252C41909%253A6508%252C5368%252C6729%253A31060%252C31256%252C37653%253A9093%252C12%2522%257D%257D&intent=checkout&ads-client-context=checkout&flowId=68909346WP205534E&ads-client-context-data=%7B%22context_id%22%3A%7B%22context_id%22%3A%2268909346WP205534E%22%2C%22channel%22%3A0%2C%22flow_type%22%3A%22checkout%22%7D%7D&ctxId=ullndg5617253d9ee24859b87230a519f426d6&isValidCtxId=true&coBrand=kr&signUpEndPoint=%2Fwebapps%2Fmpp%2Faccount-selection&isSplitLoginVariant=true&hideOtpLoginCredentials=true&requestUrl=%2Fsignin%3Fintent%3Dcheckout%26ctxId%3Dullndg5617253d9ee24859b87230a519f426d6%26returnUri%3D%25252Fwebapps%25252Fhermes%26state%3D%25253Fflow%25253D1-P%252526ulReturn%25253Dtrue%252526token%25253D68909346WP205534E%252526useraction%25253Dcommit%252526rm%25253D2%252526mfid%25253D1493251164212_e335be39b9d1c%252526xclick_params%25253DYnVzaW5lc3MlM0RhdGtpbnM3NiUyNTQwbmF2ZXIuY29tJTI2aXRlbV9uYW1lJTNEQ2xpcCUyNTIwRG93bmxvYWQlMjUyMC0lMjUyMCUyNTI4JTI1RUQlMjU5NSUyNTlDJTI1RUElMjVCOCUyNTgwJTI1MjlBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTIwb2ZmaWNlJTI1MjBzdG9yeSUyNTIwcGFydC4zJTI1MjBQdW5pc2htZW50JTI1MjBjYXRmaWdodCUyNTIwJTI1MjhBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTI5JTI2YW1vdW50JTNEOC4wMCUyNnJldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnBheXBhbCUyNTJGc3VjY2Vzcy5waHAlMjUzRm9pZCUyNTNEMjAxNzA0MjcwODU5MjE3MDE4JTI2Y2FuY2VsX3JldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnVwZGF0ZXMucGhwJTI2Y2hhcnNldCUzRHV0Zi04JTI2Y2J0JTNETXVzdCUyNTIwY2xpY2slMjUyMHRoaXMlMjUyMGZvciUyNTIwRG93bmxvYWQlMjUyMGNsaXAlMjUyMSUyNTIxJTI2bm9fc2hpcHBpbmclM0QxJTI2cm0lM0QyJTI2bm9fbm90ZSUzRDElMjZ3YV90eXBlJTNEQnV5Tm93JTI2Y291bnRlcnBhcnR5JTNEMTYxNjU1NDAzNzA0MDI2MjY5MA%2525253D%2525253D%26flowId%3D68909346WP205534E%26country.x%3DKR%26locale.x%3Den_US&forcePhonePasswordOptIn=&returnUri=%252Fwebapps%252Fhermes&state=%253Fflow%253D1-P%2526ulReturn%253Dtrue%2526token%253D68909346WP205534E%2526useraction%253Dcommit%2526rm%253D2%2526mfid%253D1493251164212_e335be39b9d1c%2526xclick_params%253DYnVzaW5lc3MlM0RhdGtpbnM3NiUyNTQwbmF2ZXIuY29tJTI2aXRlbV9uYW1lJTNEQ2xpcCUyNTIwRG93bmxvYWQlMjUyMC0lMjUyMCUyNTI4JTI1RUQlMjU5NSUyNTlDJTI1RUElMjVCOCUyNTgwJTI1MjlBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTIwb2ZmaWNlJTI1MjBzdG9yeSUyNTIwcGFydC4zJTI1MjBQdW5pc2htZW50JTI1MjBjYXRmaWdodCUyNTIwJTI1MjhBbGwlMjUyMHRoYXQlMjUyMGNhdGZpZ2h0JTI1MjB2b2wuMyUyNTI5JTI2YW1vdW50JTNEOC4wMCUyNnJldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnBheXBhbCUyNTJGc3VjY2Vzcy5waHAlMjUzRm9pZCUyNTNEMjAxNzA0MjcwODU5MjE3MDE4JTI2Y2FuY2VsX3JldHVybiUzRGh0dHAlMjUzQSUyNTJGJTI1MkZ3d3cuY2F0ZmlnaHQuY28ua3IlMjUyRnVwZGF0ZXMucGhwJTI2Y2hhcnNldCUzRHV0Zi04JTI2Y2J0JTNETXVzdCUyNTIwY2xpY2slMjUyMHRoaXMlMjUyMGZvciUyNTIwRG93bmxvYWQlMjUyMGNsaXAlMjUyMSUyNTIxJTI2bm9fc2hpcHBpbmclM0QxJTI2cm0lM0QyJTI2bm9fbm90ZSUzRDElMjZ3YV90eXBlJTNEQnV5Tm93JTI2Y291bnRlcnBhcnR5JTNEMTYxNjU1NDAzNzA0MDI2MjY5MA%25253D%25253D&phoneCode=KR+%2B82&login_email={self.username}&captchaCode=&initialSplitLoginContext=inputEmail&isTpdOnboarded=&login_password={self.password}&captcha=&splitLoginContext=inputPassword").cookies
	
	def main(self):
		self.vpn()
		try:
			self.login()['AV894Kt2TSumQQrJwe-8mzmyREO']
			print('- Good Login')
		except:
			print('- Bad Login ')

paypal(account).main()
